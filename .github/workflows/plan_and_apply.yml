name: "Plan -> Apply"
on:
  workflow_dispatch:
    inputs:
      env_name:
        description: "Name of the Terragrunt environment. e.g. prod, build"
        required: true
        type: "string"
      module:
        description: "Name of the Terragrunt module that will be applied"
        required: true
        type: "string"
      enable_expensive:
        description: "Set to 'true' to create expensive resources, to '0', '', or 'false' to destroy them"
        required: true
        default: "true"
        type: "string"
  workflow_call:
    inputs:
      env_name:
        required: true
        type: "string"
      module:
        required: true
        type: "string"
      enable_expensive:
        required: true
        default: "true"
        type: "string"

jobs:
  terragrunt_plan_and_apply:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: "Configure git"
        run: |
          git config --global --add "url.https://x:${TOKEN}@github.com/".insteadOf "ssh://git@github.com:"
          git config --global --add "url.https://x:${TOKEN}@github.com/".insteadOf "ssh://git@github.com/"
          git config --global --add "url.https://x:${TOKEN}@github.com/".insteadOf "git@github.com:"
          git config --global --add "url.https://x:${TOKEN}@github.com/".insteadOf "git@github.com/"
        env:
          TOKEN: "${{ secrets.REPO_ACCESS_TOKEN }}"
      - name: "Install terra* tools"
        run: "sudo ./bin/bootstrap/get-terraform && sudo ./bin/bootstrap/get-terragrunt"
      - name: "Run plan"
        run: "bin/plan ${{ inputs.env_name }} ${{ inputs.module }} /tmp/plan.tfplan"
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_SESSION_TOKEN: "${{ secrets.AWS_SESSION_TOKEN }}"
          TF_VAR_enable_expensive: "${{ inputs.enable_expensive }}"
      - name: "Wait for approval"
        uses: "trstringer/manual-approval@v1"
        timeout-minutes: 5
        with:
          secret: "${{ secrets.REPO_ACCESS_TOKEN }}"
          approvers: all
          minimum-approvals: 1
          additional-approved-words: 'ok,true,1'
          additional-denied-words: 'cancel,false,0'
      - name: "Apply the plan"
        run: "bin/apply ${{ inputs.env_name }} ${{ inputs.module }} /tmp/plan.tfplan"
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          AWS_SESSION_TOKEN: "${{ secrets.AWS_SESSION_TOKEN }}"
          TF_VAR_enable_expensive: "${{ inputs.enable_expensive }}"
